(include "./power-menu.yuck")

(defwindow bar
  :monitor 0
  :geometry (geometry
    :x: "0%"
    :y: "0%"
    :width "100%"
    :height "40px"
    :anchor "top center")
  :stacking "bg"
  :exclusive true
  (centerbox :class "bar"
    (left_bar)
    (clock)
    (right_bar)))

(defwidget left_bar []
  (box :space-evenly false :class "left"
    (image :class "nix-icon" :image-height "30" :path "./nix-icon.svg")
    (workspaces)))

(defwidget right_bar []
  (box :space-evenly false :halign "end" :class "right"
    (label :text {
      EWW_BATTERY.BAT0.capacity < 00 ? "  ${round(EWW_BATTERY.BAT0.capacity, 0)}%" :
      EWW_BATTERY.BAT0.capacity < 40 ? "  ${round(EWW_BATTERY.BAT0.capacity, 0)}%" :
      EWW_BATTERY.BAT0.capacity < 60 ? "  ${round(EWW_BATTERY.BAT0.capacity, 0)}%" :
      EWW_BATTERY.BAT0.capacity < 80 ? "  ${round(EWW_BATTERY.BAT0.capacity, 0)}%" : "  ${round(EWW_BATTERY.BAT0.capacity, 0)}%"}
      :halign "end"
      :class "icon")
    (label :text {
      wifi.essid == "" ? "󰤭" :
      wifi.signal < 25 ? "󰤟" :
      wifi.signal < 50 ? "󰤢" :
      wifi.signal < 75 ? "󰤥" : "󰤨" }
      :halign "end"
      :class "icon")
    (button :onclick "eww open power-menu-closer && eww open power-menu" :halign "end" :class "icon power" "⏻")))

(deflisten workspaces :initial "[]" "./scripts/get-workspaces.sh")
(deflisten current_workspace :initial "1" "./scripts/get-active-workspace.sh")
(defwidget workspaces []
  (box :space-evenly false :class "workspaces"
    (for workspace in workspaces
      (box :class "workspace-entry  ${workspace.windows > 0 ? "occupied" : "empty"}"
        (label :text "${workspace.id == current_workspace ? "" : ""}")))))

(defwidget clock []
  (label :text {formattime(EWW_TIME, "%H:%M")} :class "clock"))

(deflisten wifi :initial '{"essid": "", "signal": 0}' "./scripts/wifi.sh")
